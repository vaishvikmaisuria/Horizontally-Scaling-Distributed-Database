version: "3.3"
services:
  web:
    image: csc409group23/url:test
    volumes:
      - type: bind
        source: ./config.ini
        target: /app/config.ini
    deploy:
      replicas: 10
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "0.2"
          memory: 50M
    ports:
      - "80:80"
    networks:
      - webnet
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet
  redis-master:
    image: 'bitnami/redis:latest'
    ports:
      - '6379'
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_PASSWORD=my_master_password
    volumes:
      - "./data:/data"
    deploy:
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "0.2"
          memory: 50M
    networks:
      - webnet
  redis-replica:
    image: 'bitnami/redis:latest'
    ports:
      - '6379'
    depends_on:
      - redis-master
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-master
      - REDIS_MASTER_PORT_NUMBER=6379
      - REDIS_MASTER_PASSWORD=my_master_password
      - REDIS_PASSWORD=my_replica_password
    deploy:
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "0.2"
          memory: 50M
    networks:
      - webnet
networks:
  webnet:
